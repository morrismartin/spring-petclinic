# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- CICDAzureVMTomcat

pool:
  vmImage: 'ubuntu-latest'

  steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.8'
        jdkArchitectureOption: 'x64'
        goals: 'package'
    
    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)'
          Contents: '**/target/*.?(war|jar)'
          TargetFolder: $(Build.ArtifactStagingDirectory)
    
    - upload: $(Build.ArtifactStagingDirectory)
      artifact: drop

jobs:
  - deployment: VMDeploy
    displayName: web
    environment: 
      name: dev
      resourceType: VirtualMachine
    strategy:
        rolling:
          maxParallel: 5  #for percentages, mention as x%
          preDeploy:
            steps:
            - download: current
              artifact: drop
            - script: echo initialize, cleanup, backup, install certs
          deploy:
            steps:
            - task: Bash@3
              inputs:
                targetType: 'inline'
                script: |
                  # Modify deployment script based on the app type
                  echo "Starting deployment script run"
                  sudo java -jar '$(Pipeline.Workspace)/drop/**/target/*.war'
          routeTraffic:
            steps:
            - script: echo routing traffic
          postRouteTraffic:
            steps:
            - script: echo health check post-route traffic
          on:
            failure:
              steps:
              - script: echo Restore from backup! This is on failure
            success:
              steps:
              - script: echo Notify! This is on success